From 6c03b302921f32b2d5e1fb403ceb18ee0cbcbdf2 Mon Sep 17 00:00:00 2001
From: Frode <Frode@FC>
Date: Sun, 2 May 2010 10:14:42 +0200
Subject: [PATCH 5/5] Escaping of delimiters ('?'), support for tracking current position in file
 Removed dependency on commons-lang, io

---
 .../statnett/larm/edifact/ParserContextTest.java   |   58 ++++++++++++++++++++
 1 files changed, 58 insertions(+), 0 deletions(-)
 create mode 100644 larm-ediel-parser/src/test/java/no/statnett/larm/edifact/ParserContextTest.java

diff --git a/larm-ediel-parser/src/test/java/no/statnett/larm/edifact/ParserContextTest.java b/larm-ediel-parser/src/test/java/no/statnett/larm/edifact/ParserContextTest.java
new file mode 100644
index 0000000..320a977
--- /dev/null
+++ b/larm-ediel-parser/src/test/java/no/statnett/larm/edifact/ParserContextTest.java
@@ -0,0 +1,58 @@
+package no.statnett.larm.edifact;
+
+import static org.fest.assertions.Assertions.assertThat;
+
+import java.io.IOException;
+import java.io.Reader;
+import java.io.StringReader;
+
+import org.junit.Test;
+
+public class ParserContextTest {
+
+	@Test
+	public void shouldTrackPositionAndLastRead() throws Exception {
+		String testString = "UX'\t\nAB\r\n,1'X2345\n678912345";
+
+		ParserContext pc = new ParserContext(15);
+		StringReader r = new StringReader(testString);
+
+		read(pc, r, 2);
+		assertPosition(pc, 0, 2, 0);
+
+		read(pc, r, 1);
+		assertPosition(pc, 0, 3, 1);
+
+		read(pc, r, 2);
+		assertPosition(pc, 1, 0, 1);
+
+		read(pc, r, 2);
+		assertPosition(pc, 1, 2, 1);
+		assertThat(pc.lastRead()).isEqualTo(testString.substring(0, 7));
+
+		read(pc, r, 2);
+		assertPosition(pc, 2, 1, 1);
+		assertThat(pc.lastRead()).isEqualTo(testString.substring(0, 9));
+
+		// read past cyclic buffer size
+		read(pc, r, 12);
+		assertPosition(pc, 3, 3, 2);
+
+		assertThat(pc.lastRead()).isEqualTo(testString.substring(6, 21));
+
+	}
+
+	private void read(ParserContext pc, Reader r, int numChars)
+			throws IOException {
+		for (int i = 0; i < numChars; i++) {
+			pc.readChar(r);
+		}
+	}
+
+	private void assertPosition(ParserContext pc, int lineNum, int colNum,
+			int segmentNum) throws Exception {
+		assertThat(pc.lineNumber).isEqualTo(lineNum);
+		assertThat(pc.columnNumber).isEqualTo(colNum);
+		assertThat(pc.segmentNumber).isEqualTo(segmentNum);
+	}
+}
-- 
1.7.0.2.msysgit.0

